<!DOCTYPE html><!-- Last Published: Sat Feb 06 2021 11:25:51 GMT+0000 (Coordinated Universal Time) -->
<html>
<head>
<meta charset="utf-8"/>
<title>:)</title>
<meta content=":O" property="og:title"/>
<meta content=":(" property="twitter:title"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<meta content="google-site-verification=-mSDXhp-VMHkBu1NFWagTqxydb-IYoWC_QQZXVPh7mI" name="google-site-verification"/>
<link href="https://uploads-ssl.webflow.com/5f9d158fca29d8094b191c2d/css/fotp-online.webflow.5555cbe56.css" rel="stylesheet" type="text/css"/>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js" type="text/javascript"></script>

<script type="text/javascript">
WebFont.load({
  google: {
    families: ["Roboto Mono:100,200,300,regular,500,600,700,100italic,200italic,300italic,italic,500italic,600italic,700italic","M PLUS 1p:regular,500,700,800,900"]
  }
});
</script>
<!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" type="text/javascript"></script><![endif]-->
<script type="text/javascript">
!function(o,c){
  var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
<link href="https://uploads-ssl.webflow.com/5f9d158fca29d8094b191c2d/60191798cc4d9a8eb6145dc1_favicon.png" rel="shortcut icon" type="image/x-icon"/>
<link href="https://uploads-ssl.webflow.com/5f9d158fca29d8094b191c2d/6019179c2305aa5ed1e8aad0_favicon-256.png" rel="apple-touch-icon"/>

<script src="https://unpkg.com/isotope-layout@3.0.6/dist/isotope.pkgd.min.js"></script>
<script src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/hover.css/2.1.1/css/hover.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css" />

<style>
@media only screen and (min-width: 1440px) {
     body {font-size: 14.4px;}
}

/*COLLECTIONS*/  
.multi-ref-target, .list-heading-wrapper, .list-image-wrapper, .list-button-wrapper, .bio-paragraph-wrapper {
  outline: 0.1em solid #323f63;
  outline-offset: -1px;
}

/*BUTTON OUTLINES*/
.nav-button, .nav-button:hover, .nav-button:active, .filter-button, .filter-button:hover {
	-webkit-text-stroke: 0.08rem #323f63;
}

/*FILTER, LIST & SUBMIT BUTTON OUTLINES*/
.list-button, .list-button:hover, .page-button, .page-button:hover {
	-webkit-text-stroke: 0.08rem #323f63;
}

/*LINK HIGHLIGHT*/
/* .link {
  position: relative;
  overflow: hidden;
} */

/* .link::after {
  content: "";
  position: absolute;
  left: -1.5%;
  top: -10%;
  width: 0;
  height: 130%;
  z-index: 1;
  transition: width 0.5s;
  transition-timing-function: ease-in-out;
  mix-blend-mode: multiply;
  border-radius: 0.8em 0.3em;
  margin: 0 3em 0 -0.3em;
  background-image: linear-gradient(
    to right,
    rgba(230, 54, 45, 0.9),
    rgba(230, 54, 45, 0.8) 30%,
    rgba(230, 54, 45, 0.7)
  ); 
} */

.link:hover::after, .link:focus::after {
  width: 130%;
}
  
/*PARAGRAPH HIGHLIGHT - ALMOST WHITE*/
.highlight {
  border-radius: 0.8em 0.3em;
  margin: 0 -0.4em;
  padding: 0.1em 0.4em;
  border-radius: 0.8em 0.3em;
  background: transparent;
  background-image: linear-gradient(
    to right,
    rgba(236, 239, 239, 0.9),
    rgba(236, 239, 239, 0.8) 30%,
    rgba(236, 239, 239, 0.7)
  );
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
  
/*FAQ HIGHLIGHT - BERRY*/
.faq-highlight {
  margin: 0 -0.4em;
  padding: 0.1em 0.4em;
  border-radius: 0.8em 0.3em;
  background: transparent;
  background-image: linear-gradient(
    to right,
    rgba(163, 85, 90, 0.9),
    rgba(163, 85, 90, 0.8) 20%,
    rgba(163, 85, 90, 0.9)
  	);
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
  
/*H1 - UNDERLINE*/
.h1 {
  text-decoration: underline wavy #a3555a;
  text-underline-offset: 0.2em;
  text-decoration-thickness: 0.09em;
  text-underline-position: under;
}

.grid-item { width: 25%; }
.grid-item--width2 { width: 50%; }

</style>
</head>
<body>
<div>
<div class="filter-list-wrapper jetboost-filter-l66b w-dyn-list"><div role="list" class="filter-list w-dyn-items"></div></div>
<div class="collection-list-wrapper-3 jetboost-list-wrapper-l66b w-dyn-list"><div role="list" class="grid w-dyn-items"></div></div>
</div>

<script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=5f9d158fca29d8094b191c2d" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="https://uploads-ssl.webflow.com/5f9d158fca29d8094b191c2d/js/webflow.10daf3ddd.js" type="text/javascript"></script>
<!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->

<script type="text/javascript">

async function insertFilters(url, element, callback) {
  console.log('insertFilters', url)
  let filters = await fetch(url)
    .then(body => body.json())
    .catch(console.error)
  
  const fragment = Object.entries(filters).reduce((fragment, [filter, collection]) => {

    const slug = filter.toLowerCase().split(" ").join('');

    let input = document.createElement('input');
    input.setAttribute('type', 'hidden')
    input.setAttribute('value', slug)
    input.classList.add('jetboost-list-item')

    let embed = document.createElement('div');
    embed.classList.add('w-embed');
    embed.append(input)

    let link = document.createElement('a');
    link.href = "#";
    link.classList.add(...['filter-button', 'w-button'])
    link.textContent = filter;

    let item = document.createElement('div');
    item.setAttribute('role', 'listitem');
    item.classList.add(...['filter-item', 'w-dyn-item'])
    item.append(embed);
    item.append(link)

    item.addEventListener('click', () => callback(collection))

    fragment.append(item);

    return fragment;
  }, document.createDocumentFragment())

  element.append(fragment)
}

async function insertImages(url, element) {
  let images = await fetch(url)
    .then(body => body.json())
    .catch(console.error)
  const fragment = images.reduce((fragment, { title, url }) => {

    const input = document.createElement('input');
    input.setAttribute('type', 'hidden');
    input.classList.add('jetboost-list-item');
    input.setAttribute('value', title.toLowerCase().split(' ').join(''))

    let embed = document.createElement('div');
    embed.classList.add('w-embed');
    embed.append(input);

    let header = document.createElement('h3');
    header.textContent = title;

    const image = document.createElement('img');
    image.setAttribute('loading', 'lazy');
    image.src = url;
    image.setAttribute('alt', title);
    image.setAttribute('sizes', '100vw');
    image.setAttribute('srcset', url)

    const item = document.createElement('div');
    item.setAttribute('role', 'listitem');
    item.setAttribute('title', title);
    item.classList.add(...['grid-item', 'w-dyn-item']);
    item.append(embed);
    item.append(header);
    item.append(image);

    fragment.append(item);
    return fragment;
  }, document.createDocumentFragment())

  element.append(fragment)
  return element;
}

function filter(iso) {
  console.log('creating filter');
  return collection => {
    console.log('filtering', collection)
    iso.arrange({
      filter: item => {
        return collection.includes(item.getAttribute('title'))
      }
    });
  }
}

async function main() {
  const images = await insertImages('images.json', document.querySelector('.grid'));
  const iso = new Isotope(images, {
    itemSelector: '.grid-item',
    percentPosition: true,
    masonry: { }
  });
  const filters = await insertFilters('filters.json', document.querySelector('.filter-list'), filter(iso));
  imagesLoaded(images).on('progress', () => {
    console.log('progress');
    iso.layout();
  });
}

main();
</script>
</body></html>

